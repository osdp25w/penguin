apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: penguin
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: web
          image: osdp25w/penguin:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: frontend-config
              mountPath: /usr/share/nginx/html/config
              readOnly: true
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet: { path: /, port: 80 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /, port: 80 }
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
      volumes:
        - name: frontend-config
          projected:
            sources:
              - configMap:
                  name: frontend-config
                  items:
                    - key: config.public.js
                      path: config.public.js
              - secret:
                  name: frontend-secret
                  items:
                    - key: config.secret.js
                      path: config.secret.js
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: penguin
spec:
  selector:
    app: frontend
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: penguin
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: nginx
  rules:
  - host: penguin.osdp25w.xyz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
  tls:
  - hosts: ["penguin.osdp25w.xyz"]
    secretName: penguin-tls-secret
